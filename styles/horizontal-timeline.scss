@use './colors.scss' as *;

:root {
  --hoverHighlightColor: transparent;
}

$available-colors: orange, blue, green, red, purple, yellow, pink, gray;
$vis-item-types: 'vis-background', 'vis-box', 'vis-point', 'vis-range', 'vis-line', 'vis-dot';
// STOP - did you remember to change the matching variables in colors.ts?

.vis-timeline {
  border: 1px solid transparent;
}

.runtime-hover {
  background: color-mix(in oklab, var(--hoverHighlightColor), transparent 40%);
  border-color: color-mix(in oklab, var(--hoverHighlightColor), white 30%) !important;
  filter: none;
}

.vis-item-content,
.vis-item-overflow {
  .timeline-card {
    display: none;
    width: 300px;
    height: max-content;
    position: fixed !important;
  }
}

div.vis-item-content > a,
div.vis-item-overflow > div > a {
  text-decoration: none !important;
  color: inherit;
  padding: 6px;
}

.vis-item:hover div.vis-item-content > a,
.vis-item:hover div.vis-item-overflow > div > a,
.vis-item.vis-selected div.vis-item-content > a,
.vis-item.vis-selected div.vis-item-overflow > div > a {
  font-weight: bold;
}

.vis-item {
  cursor: pointer;
  box-sizing: border-box !important;

  @each $color in $available-colors {
    @each $type in $vis-item-types {
      @include add-color($color, &);
      @include add-color($color, '&.#{$type}');
      @include add-color($color, '&.#{$type}.vis-selected', $alpha: .45);
      @include add-color($color, &, $addon: ':hover', $alpha: .45);
    }
  }
}
// STOP - did you remember to change the matching rules in colors.ts?

.vis-panel {
  &.vis-center,
  &.vis-left,
  &.vis-right {
    border-color: var(--background-secondary);
  }
}

.vis-grid {
  &.vis-minor {
    display: none;
  }

  &.vis-major {
    display: none;
  }
}

/* Vis Timeline Navigation */
.vis-navigation-input {
  margin-left: 10px;
  margin-right: 10px;
  margin-top: 10px;
  padding-left: 10px;
  padding-bottom: 5px;
  width: 65% !important;
  background-color: var(--background-secondary-alt);
  border: none;
  border-radius: 7px;
  height: auto;
  width: max-content;
  text-rendering: auto;
  color: -internal-light-dark(black, white);
  letter-spacing: normal;
  word-spacing: normal;
  text-transform: none;
  text-indent: 0px;
  text-shadow: none;
  overflow-wrap: break-word;
  color: var(--text-normal);
  appearance: textfield;
  cursor: text;
  font-family: "Comic Sans MS" !important;
  font-size: 15px !important;
}

.vis-item.vis-point {
  background: none !important;
  /* 取消背景 */
  border: none !important;
  /* 取消外框 */
}

.vis-item.vis-point .vis-item-content {
  background: none !important;
  /* 取消內容背景 */
  padding: 0 5px !important;
  /* 左右加一點間距 */
}


.tl-group-menu {
  position: absolute;
  background: var(--background-primary-alt);
  border: 1px solid var(--background-modifier-border);
  border-radius: 4px;
  padding: 6px;
  z-index: 1000;
}
.tl-group-menu label {
  display: block;
  margin: 4px 0;
  cursor: pointer;
}

/* controls 容器：水平排列，间距统一 */
.tl-controls {
  display: flex;
  align-items: center;
  gap: 6px;
  position: relative;  /* 给下拉菜单做定位依据 */
  margin-bottom: 6px;
}

/* 两个按钮长得像一组 */
.tl-controls button {
  padding: 4px 8px;
  border: none;
  border-radius: 4px;
  // background: var(--background-secondary);
  // color: var(--text-normal);
  font-size: 0.9em;
  cursor: pointer;
}
// /* hover / focus 效果 */
// .tl-controls button:hover {
//   background: var(--background-modifier-hover);
// }

/* 下拉菜单定位到按钮底下 */
.tl-group-menu {
  position: absolute;
  top: 100%;      /* 紧贴 controls 容器底部 */
  left: 0;        /* 从左边对齐 */
  margin-top: 4px;
  background: var(--background-primary-alt);
  border: 1px solid var(--background-modifier-border);
  border-radius: 4px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.3);
  padding: 8px;
  z-index: 1000;
  min-width: 120px;
}

/* 隐藏时不占空间 */
.tl-group-menu[hidden] {
  display: none !important;
}

/* menu 内 label 统一样式 */
.tl-group-menu label {
  display: flex;
  align-items: center;
  gap: 4px;
  margin-bottom: 4px;
  font-size: 0.85em;
}
